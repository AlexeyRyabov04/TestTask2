// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestTask2.Server.Data;

#nullable disable

namespace TestTask2.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241014211242_AddAccountField")]
    partial class AddAccountField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestTask2.Server.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActiveInBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ActiveOutBalance")
                        .HasColumnType("numeric");

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsClassResult")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGroupResult")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecordResult")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<decimal>("PassiveInBalance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PassiveOutBalance")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TestTask2.Server.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("ReportFileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportFileId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("TestTask2.Server.Models.ReportFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReportFiles");
                });

            modelBuilder.Entity("TestTask2.Server.Models.Account", b =>
                {
                    b.HasOne("TestTask2.Server.Models.Class", "Class")
                        .WithMany("Accounts")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("TestTask2.Server.Models.Class", b =>
                {
                    b.HasOne("TestTask2.Server.Models.ReportFile", "ReportFile")
                        .WithMany("Classes")
                        .HasForeignKey("ReportFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportFile");
                });

            modelBuilder.Entity("TestTask2.Server.Models.Class", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("TestTask2.Server.Models.ReportFile", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
